CREATE OR REPLACE PROCEDURE SP_INSERTARASISTENCIA(FECHA_ASISTENCIA_IN IN DATE, ESTADO_IN IN CHAR, USR_CREACION_IN IN VARCHAR,
                            RUN_IN IN NUMBER, ID_CURSO_IN IN NUMBER, DIAS_BLOQUEO IN NUMBER, RESULTADO_OUT OUT VARCHAR)
/*
    CODE 0 SUCESS.
    ERRORS:
    -1 = RUT DOESN'T EXIST
    -2 = ATTENTANCE HAS + DAYS THAN DEFINED AS DIAS_BLOQUEO PARAMETER
    -3 = ATTENDANCE CAN'T BE INSERTED IN THE FUTURE
    -4 = PERSON ISN'T A VALID STUDENT(A STATUS, AND ROLE 5)
*/
IS 
    VALIDADOR_FECHA INT;
    VALIDADOR_ALUMNO INT;
    VALIDADOR_EXISTEASISTENCIA INT;
    SQL_ERRORCODE INT;
    SQL_ERRORMESSAGE VARCHAR(1500);
BEGIN 
    SELECT TO_DATE(SYSDATE, 'DD-MM-YYYY') - TO_DATE(FECHA_ASISTENCIA_IN, 'DD-MM-YYYY') INTO VALIDADOR_FECHA FROM DUAL;
    SELECT COUNT(ID_ASISTENCIA) INTO VALIDADOR_EXISTEASISTENCIA FROM ASISTENCIA WHERE FECHA_ASISTENCIA = FECHA_ASISTENCIA_IN AND RUN = RUN_IN AND ID_CURSO = ID_CURSO_IN;
    VALIDADOR_ALUMNO:=F_VALIDARSIESALUMNO(RUN_IN);
    IF VALIDADOR_ALUMNO = -1 THEN
        RESULTADO_OUT:='-4'; 

    ELSE
        IF VALIDADOR_FECHA > DIAS_BLOQUEO THEN
        RESULTADO_OUT:= '-2'; --ASISTENCIA TIENE MAS DE X DIAS DEFINIDOS EN DIAS_BLOQUEO, NO ES POSIBLE INSERTAR
        ELSIF VALIDADOR_FECHA < 0 THEN
            RESULTADO_OUT:= '-3'; -- ASISTENCIA NO PUEDE SER INSERTADA EN EL FUTURO
        ELSIF VALIDADOR_EXISTEASISTENCIA > 0 THEN
        UPDATE ASISTENCIA SET FECHA_CREACION=CURRENT_TIMESTAMP, ESTADO= ESTADO_IN, USR_CREACION = USR_CREACION_IN WHERE
                            FECHA_ASISTENCIA = FECHA_ASISTENCIA_IN AND RUN = RUN_IN AND ID_CURSO = ID_CURSO_IN;
            RESULTADO_OUT:='1'; --YA EXISTE ASISTENCIA, REGISTRO MODIFICADO
            COMMIT;
        ELSE
            INSERT INTO ASISTENCIA(ID_ASISTENCIA, FECHA_CREACION, FECHA_ASISTENCIA, ESTADO, USR_CREACION, RUN, ID_CURSO)
                    VALUES (SEC_INGRESOASISTENCIA.NEXTVAL, CURRENT_TIMESTAMP, FECHA_ASISTENCIA_IN, ESTADO_IN,
                            USR_CREACION_IN, RUN_IN, ID_CURSO_IN);
            RESULTADO_OUT:='0';
            COMMIT;
        END IF;
    END IF;
EXCEPTION WHEN OTHERS THEN
    ROLLBACK;
    SQL_ERRORMESSAGE:=SQLERRM;
    SQL_ERRORCODE:= SQLCODE;
    -- INSERTANDO ERROR EN REGISTRO
    INSERT INTO ERROR(ID_ERROR, PROCESO, COD_ERROR, MENSAJE_ERROR, FECHA) VALUES
                    ((SELECT NVL(MAX(ID_ERROR), 0)+1 FROM ERROR), 'SP_INSERTARASISTENCIA',SQL_ERRORCODE,SQL_ERRORMESSAGE, CURRENT_TIMESTAMP );
    COMMIT;
    IF SQL_ERRORCODE='-2291' THEN
        RESULTADO_OUT:='-1'; 
    ELSE
        RESULTADO_OUT:=SQL_ERRORMESSAGE;
    END IF;
    DBMS_OUTPUT.PUT_LINE('ERR ->' || RESULTADO_OUT);  
END;
